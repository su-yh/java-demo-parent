<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.suyh</groupId>
    <artifactId>demo-46-multi-datasource-flywaydb-01</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <spring-boot.version>2.7.4</spring-boot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--这个依赖主要是在编译阶段使用，所以scope 的值是provided-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.9</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources/db/migrate/master</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                </includes>
                <targetPath>${project.build.outputDirectory}/db/migrate/master</targetPath>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources/db/migrate/slave</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                </includes>
                <targetPath>${project.build.outputDirectory}/db/migrate/slave</targetPath>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources/config</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*</include>
                </includes>
                <targetPath>${project.build.outputDirectory}/config</targetPath>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources/mapper/master</directory>
                <includes>
                    <include>*.xml</include>
                </includes>
                <!-- 资源文件拷贝的目标位置，如果目录不存在则会创建这个目录 -->
                <targetPath>${project.build.outputDirectory}/mapper/master</targetPath>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/resources/mapper/slave</directory>
                <includes>
                    <include>*.xml</include>
                </includes>
                <!-- 资源文件拷贝的目标位置，如果目录不存在则会创建这个目录 -->
                <targetPath>${project.build.outputDirectory}/mapper/slave</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <!-- 跳过该模块的发布，一般用在模块包含启动类(main)时 -->
                    <skip>true</skip>
                </configuration>
            </plugin>
            <!-- maven 的打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.5.RELEASE</version>
                <configuration>
                    <excludes>
                        <!-- lombok 只在编译时有效 -->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <!--打包源码的插件，还需要包含下面的配置。我没有加的时候是没有打包成功的。-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
