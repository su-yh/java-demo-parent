<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <groupId>com.suyh</groupId>
    <artifactId>java-demo-springboot</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
<!--        <module>demo-00-00-core</module>-->
<!--        <module>demo-00-01-logback</module>-->
    </modules>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- 默认激活的配置需要禁用时使用非排除掉 -->
                <!-- mvn clean package -P !dev -->
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>application*.properties</include>
                            <include>application*.yml</include>
                            <include>application*.yaml</include>
                        </includes>
                        <excludes>
                            <!-- 排除所有带环境的配置 -->
                            <!-- 如果include 和exclude 同时存在，则exclude 优先级会更高 -->
                            <exclude>application-*.properties</exclude>
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>all</id>
            <modules>
                <module>demo-00-02-jpa</module>
                <module>demo-00-03-constants</module>
                <module>demo-01-log4j2</module>
                <module>demo-01-test-01</module>
                <module>demo-01-test-02-mock</module>
                <module>demo-01-test-03-junit5</module>
                <module>demo-02-config-center-01</module>
                <module>demo-02-properties-01</module>
                <module>demo-03-redis-01</module>
                <module>demo-03-redis-02-lettuce</module>
                <module>demo-03-redis-03-redis_template</module>
                <module>demo-03-redis-04-multi-datasource</module>
                <module>demo-04-scheduler-01</module>
                <module>demo-04-scheduler-02</module>
                <module>demo-04-scheduler-03-shedlock-custom</module>
                <module>demo-06-mybatis-01</module>
                <module>demo-06-mybatis-02-common</module>
                <module>demo-06-mybatis-03-multi-db-01</module>
                <module>demo-07-kafka-01</module>
                <module>demo-08-jwt-01</module>
                <module>demo-09-shiro-01</module>
                <module>demo-09-shiro-02</module>
                <module>demo-09-shiro-03</module>
                <module>demo-09-shiro-04-ssm</module>
                <module>demo-12-swagger-01</module>
                <module>demo-12-swagger-02</module>
                <module>demo-13-autowired-resource-01</module>
                <module>demo-16-caffeine-01</module>
                <module>demo-16-guava-01</module>
                <module>demo-18-resttemplate-01</module>
                <module>demo-18-WebClient-02</module>
                <module>demo-18-WebClient-03</module>
                <module>demo-19-servletRequest-01</module>
                <module>demo-20-filter-interceptor-01</module>
                <module>demo-21-01-controller-advice</module>
                <module>demo-21-02-filter-exception</module>
                <module>demo-21-03-controller-advice</module>
                <module>demo-21-04-simpleMappingExceptionResolver</module>
                <module>demo-21-05-response-advice</module>
                <module>demo-21-06-error-attribute</module>
                <module>demo-22-validation-01</module>
                <module>demo-22-validation-02</module>
                <module>demo-22-validation-03</module>
                <module>demo-23-aop-01</module>
                <module>demo-24-profile-01</module>
                <module>demo-25-flywaydb-01</module>
                <module>demo-26-resource-01</module>
                <module>demo-27-activiti-01</module>
                <module>demo-27-activiti-02</module>
                <module>demo-28-devtools-01</module>
                <module>demo-29-db-jpa-01</module>
                <module>demo-29-db-jpa-02-custom</module>
                <module>demo-30-starter-define-01</module>
                <module>demo-30-starter-usage-01</module>
                <module>demo-31-async-01</module>
                <module>demo-32-es-01</module>
                <module>demo-32-es-02</module>
                <module>demo-33-jackson-01</module>
                <module>demo-33-jackson-02</module>
                <module>demo-33-jackson-03</module>
                <module>demo-33-jackson-04</module>
                <module>demo-34-actuator-01</module>
                <module>demo-34-actuator-02</module>
                <module>demo-35-aware-01</module>
                <module>demo-36-01-listener-springboot-24-pre</module>
                <module>demo-36-02-listener-springboot-24-post</module>
                <module>demo-38-properties-load</module>
                <module>demo-38-spi-load</module>
                <module>demo-39-nacos-01-discovery</module>
                <module>demo-39-nacos-02-registry</module>
                <module>demo-39-nacos-03-listener</module>
                <module>demo-40-sentinel-01-nacos-datasource</module>
                <module>demo-40-sentinel-02-spring-boot-web</module>
                <module>demo-41-bean-exclude-01</module>
                <module>demo-42-spring-boot-ext-01</module>
                <module>demo-43-web-redirect-01</module>
                <module>demo-44-spring-mvc-01</module>
                <module>demo-45-cxf-sentinel-01</module>
                <module>demo-46-multi-datasource-flywaydb-01</module>
                <module>demo-46-multi-datasource-flywaydb-02-hikari-cp-single</module>
                <module>demo-47-01-springboot-metadata</module>
                <module>demo-48-01-cors</module>
                <module>demo-49-01-active-spring-boot-24-post</module>
                <module>demo-50-01-httpclient</module>
                <module>demo-51-01-bean-dynamic</module>
                <module>demo-52-01-prometheus</module>
                <module>demo-53-01-zookeeper</module>
                <module>demo-53-02-zookeeper-curator</module>
                <module>demo-53-03-zookeeper-listener</module>
                <module>demo-54-01-javassist</module>
                <module>demo-55-01-websocket-echo</module>
                <module>demo-55-04-websocket</module>
                <module>demo-56-01-HandlerMethodArgumentResolver</module>
                <module>demo-57-01-uuid-distributed</module>
                <module>demo-58-01-suyh-web-common-spring-boot-starter</module>
            </modules>
        </profile>
        <profile>
            <id>demo-02</id>
            <modules>
                <module>demo-02-config-center-01</module>
                <module>demo-02-properties-01</module>
            </modules>
        </profile>
        <profile>
            <id>demo-03</id>
            <modules>
                <module>demo-03-redis-01</module>
                <module>demo-03-redis-02-lettuce</module>
                <module>demo-03-redis-03-redis_template</module>
                <module>demo-03-redis-04-multi-datasource</module>
            </modules>
        </profile>
        <profile>
            <id>demo-04-scheduler</id>
            <modules>
                <module>demo-04-scheduler-01</module>
                <module>demo-04-scheduler-02</module>
                <module>demo-04-scheduler-03-shedlock-custom</module>
            </modules>
        </profile>
        <profile>
            <id>demo-06-mybatis</id>
            <modules>
                <module>demo-06-mybatis-01</module>
                <module>demo-06-mybatis-02-common</module>
                <module>demo-06-mybatis-03-multi-db-01</module>
            </modules>
        </profile>
        <profile>
            <id>demo-12-swagger</id>
            <modules>
                <module>demo-12-swagger-01</module>
                <module>demo-12-swagger-02</module>
                <module>demo-12-swagger-03-knife4j</module>
            </modules>
        </profile>
        <profile>
            <id>demo-18-web_client</id>
            <modules>
                <module>demo-18-resttemplate-01</module>
                <module>demo-18-WebClient-02</module>
                <module>demo-18-WebClient-03</module>
            </modules>
        </profile>
        <profile>
            <id>demo-21-mvc-exception</id>
            <modules>
                <module>demo-21-01-controller-advice</module>
                <module>demo-21-02-filter-exception</module>
                <module>demo-21-03-controller-advice</module>
                <module>demo-21-04-simpleMappingExceptionResolver</module>
                <module>demo-21-05-response-advice</module>
                <module>demo-21-06-error-attribute</module>
            </modules>
        </profile>
        <profile>
            <id>demo-22-validation</id>
            <modules>
                <module>demo-22-validation-01</module>
                <module>demo-22-validation-02</module>
                <module>demo-22-validation-03</module>
            </modules>
        </profile>
        <profile>
            <id>demo-25-01-flywaydb</id>
            <modules>
                <module>demo-25-flywaydb-01</module>
            </modules>
        </profile>
        <profile>
            <id>demo-33</id>
            <modules>
                <module>demo-33-jackson-01</module>
                <module>demo-33-jackson-02</module>
                <module>demo-33-jackson-03</module>
                <module>demo-33-jackson-04</module>
            </modules>
        </profile>
        <profile>
            <id>demo-46-multi-datasource-flywaydb</id>
            <modules>
                <module>demo-46-multi-datasource-flywaydb-01</module>
                <module>demo-46-multi-datasource-flywaydb-02-hikari-cp-single</module>
            </modules>
        </profile>
        <profile>
            <id>demo-56-01</id>
            <modules>
                <module>demo-56-01-HandlerMethodArgumentResolver</module>
            </modules>
        </profile>
        <profile>
            <id>demo-57-01</id>
            <modules>
                <module>demo-57-01-uuid-distributed</module>
            </modules>
        </profile>
        <profile>
            <id>demo-58-01</id>
            <modules>
                <module>demo-58-01-suyh-web-common-spring-boot-starter</module>
            </modules>
        </profile>
        <profile>
            <id>demo-59-01</id>
            <modules>
                <module>demo-59-01-stopwatch</module>
            </modules>
        </profile>

        <profile>
            <id>demo-60-google-auth</id>
            <modules>
<!--                <module>demo-60-01-google-auth</module>-->
<!--                <module>demo-60-02-google-auth</module>-->
                <module>demo-60-03-google-auth</module>
            </modules>
        </profile>

        <profile>
            <id>demo-61-security</id>
            <modules>
                <module>demo-61-01-security</module>
                <module>demo-61-02-security</module>
                <module>demo-61-03-security</module>
                <module>demo-61-04-security</module>
                <module>demo-61-05-security</module>
                <module>demo-61-06-security</module>
            </modules>
        </profile>

    </profiles>

    <!--我在阿里云效上的个人镜像仓库地址-->
    <distributionManagement>
        <repository>
            <id>rdc-releases</id>
            <url>https://packages.aliyun.com/maven/repository/2407338-release-wf8GjT</url>
        </repository>
        <snapshotRepository>
            <id>rdc-snapshots</id>
            <url>https://packages.aliyun.com/maven/repository/2407338-snapshot-CclwV1</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <!--使application*.* 中可以使用${xxx} 来引用pom.xml 中配置的变量，但不能直接被spring 加载到。-->
                <!-- filter 会对二进制文件进行特殊处理，如果不想二进制文件被修改，则需要配置nonFilteredFileExtensions 标签属性，在maven-resources-plugin 插件里面 -->
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--        <resources>-->
        <!--            <resource>-->
        <!--                <directory>${project.basedir}/src/main/resources</directory>-->
        <!--                <filtering>true</filtering>-->
        <!--                <includes>-->
        <!--                    &lt;!&ndash; 仅添加指定环境的配置文件 &ndash;&gt;-->
        <!--                    <include>application-${spring_profiles_active}.properties</include>-->
        <!--                    &lt;!&ndash;妈的，我正常配置代码都编译不进去了。不应该放在父MAVEN 中的。&ndash;&gt;-->
        <!--                    <include>*</include>-->
        <!--                </includes>-->
        <!--            </resource>-->
        <!--            <resource>-->
        <!--                <directory>${project.basedir}/src/main/resources/mapper</directory>-->
        <!--                <includes>-->
        <!--                    <include>*.xml</include>-->
        <!--                </includes>-->
        <!--                &lt;!&ndash; 资源文件拷贝的目标位置，如果目录不存在则会创建这个目录 &ndash;&gt;-->
        <!--                <targetPath>${project.build.outputDirectory}/mapper</targetPath>-->
        <!--            </resource>-->
        <!--        </resources>-->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <nonFilteredFileExtensions>
                        <!-- 排除使用filter 的文件后缀名。 -->
                        <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <!-- maven 的打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.5.RELEASE</version>
                <configuration>
                    <excludes>
                        <!-- lombok 只在编译时有效 -->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <!--打包源码的插件，还需要包含下面的配置。我没有加的时候是没有打包成功的。-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 可以使用变量来指定整个项目的版本号，但是整个项目都要使用，不能从某个模块开始 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.7</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- 用来编译proto 源文件的，生成的java 文件默认在 target/generated-sources、 目录下面的 -->
                <!-- 而proto 源文件一般在：src/main/proto/ 目录下面 -->
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                    </pluginArtifact>
                    <!-- 这里可以指定源文件目录和输出文件目录 -->
                    <protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot>
                    <outputDirectory>${project.basedir}/src/main/suyh</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
