<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <groupId>com.suyh</groupId>
    <artifactId>java-demo-springboot</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <modules>
        <module>demo-00-00-core</module>
        <module>demo-00-01-common</module>
        <module>demo-00-02-jpa</module>
        <module>demo-00-03-constants</module>
        <module>demo-01-log4j2</module>
        <module>demo-01-test-01</module>
        <module>demo-01-test-02-mock</module>
        <module>demo-02-config-center-01</module>
        <module>demo-02-properties-01</module>
        <module>demo-03-jedis-01</module>
        <module>demo-04-scheduler-01</module>
        <module>demo-04-scheduler-02</module>
        <module>demo-06-mybatis-01</module>
        <module>demo-06-mybatis-02-common</module>
        <module>demo-06-mybatis-03-multi-db-01</module>
        <module>demo-07-kafka-01</module>
        <module>demo-08-jwt-01</module>
        <module>demo-09-shiro-01</module>
        <module>demo-09-shiro-02</module>
        <module>demo-09-shiro-03</module>
        <module>demo-09-shiro-04-ssm</module>
        <module>demo-12-swagger-01</module>
        <module>demo-13-autowired-resource-01</module>
        <module>demo-16-caffeine-01</module>
        <module>demo-16-guava-01</module>
        <module>demo-18-resttemplate-01</module>
        <module>demo-18-WebClient-02</module>
        <module>demo-18-WebClient-03</module>
        <module>demo-19-servletRequest-01</module>
        <module>demo-20-filter-interceptor-01</module>
        <module>demo-21-controller-advice-01</module>
        <module>demo-21-filter-exception-02</module>
        <module>demo-21-03-simpleMappingExceptionResolver</module>
        <module>demo-24-profile-01</module>
        <module>demo-25-flywaydb-01</module>
        <module>demo-26-resource-01</module>
        <module>demo-27-activiti-01</module>
        <module>demo-27-activiti-02</module>
        <module>demo-28-devtools-01</module>
        <module>demo-29-db-jpa-01</module>
        <module>demo-30-starter-define-01</module>
        <module>demo-30-starter-usage-01</module>
        <module>demo-31-async-01</module>
        <module>demo-33-jackson-01</module>
        <module>demo-33-jackson-02</module>
        <module>demo-29-db-jpa-02-custom</module>
        <module>demo-34-actuator-01</module>
        <module>demo-35-aware-01</module>
        <module>demo-38-spi-load</module>
        <module>demo-38-properties-load</module>
        <module>demo-39-nacos-01-discovery</module>
        <module>demo-39-nacos-02-registry</module>
        <module>demo-39-nacos-03-listener</module>
        <module>demo-40-sentinel-01-nacos-datasource</module>
        <module>demo-40-sentinel-02-spring-boot-web</module>
        <module>demo-41-bean-exclude-01</module>
        <module>demo-42-spring-boot-ext-01</module>
        <module>demo-43-web-redirect-01</module>
        <module>demo-44-spring-mvc-01</module>
        <module>demo-45-cxf-sentinel-01</module>
        <module>demo-46-multi-datasource-flywaydb-01</module>
        <module>demo-47-01-springboot-metadata</module>
        <module>demo-48-01-cors</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- MySQL Connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.9</version>
            </dependency>

            <dependency>
                <groupId>com.oracle.ojdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>19.3.0.0</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>2.10.2</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.10.5.1</version>
                <scope>compile</scope>
            </dependency>

            <!--缺少此jar包，导致@Mapper注解无效-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.0.1</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>2.9.2</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>2.9.2</version>
            </dependency>
            <!-- swagger ui 的doc.html 文档 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>swagger-bootstrap-ui</artifactId>
                <version>1.9.3</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.4.0</version>
            </dependency>

            <!--mapper-->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>2.1.5</version>
            </dependency>
            <!--pagehelper-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.5</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.mybatis.spring.boot</groupId>
                        <artifactId>mybatis-spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>1.3.7</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.9</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>31.0.1-jre</version>
            </dependency>

            <!--引入Kafka 开始-->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.12</artifactId>
                <version>1.1.1</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>2.4.6.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>2.0.1</version>
            </dependency>
            <!--引入Kafka 结束-->

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>0.9.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>1.7.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring-boot-web-starter</artifactId>
                <version>1.4.0</version>
            </dependency>

            <!-- shedlock 分布式定时任务锁 - 使用 jdbc -->
            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-spring</artifactId>
                <version>2.3.0</version>
            </dependency>
            <dependency>
                <groupId>net.javacrumbs.shedlock</groupId>
                <artifactId>shedlock-provider-jdbc-template</artifactId>
                <version>2.3.0</version>
            </dependency>

            <!-- shedlock - 使用 redis -->
            <!--            <dependency>-->
            <!--                <groupId>net.javacrumbs.shedlock</groupId>-->
            <!--                <artifactId>shedlock-provider-jedis</artifactId>-->
            <!--                <version>0.17.0</version>-->
            <!--            </dependency>-->

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <!-- 链式调用：添加注解【@Accessors(chain = true)】 -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <!-- lombok 只在编译时有效，不需要在运行时使用。 -->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <!-- swagger ui 的doc.html 文档 -->
        <!--http://localhost:12103/doc.html-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>swagger-bootstrap-ui</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <spring_profiles_active>dev</spring_profiles_active>
            </properties>
            <activation>
                <!-- 默认激活的配置需要禁用时使用非排除掉 -->
                <!-- mvn clean package -P !dev -->
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>${project.basedir}/src/main/resources</directory>
                        <filtering>true</filtering>
                        <includes>
                            <include>application*.properties</include>
                            <include>application*.yml</include>
                            <include>application*.yaml</include>
                        </includes>
                        <excludes>
                            <!-- 排除所有带环境的配置 -->
                            <!-- 如果include 和exclude 同时存在，则exclude 优先级会更高 -->
                            <exclude>application-*.properties</exclude>
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <!--springboot 2.4.x 版本之前-->
            <id>springboot-24-pre</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <modules>
                <module>demo-22-validation-01</module>
                <module>demo-23-aop-01</module>
                <module>demo-32-es-01</module>
                <module>demo-32-es-02</module>
                <module>demo-36-01-listener-springboot-24-pre</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                        <version>2.2.5.RELEASE</version>
                        <scope>import</scope>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <!--springboot 2.4.x 版本之后-->
            <id>springboot-24-post</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>demo-36-02-listener-springboot-24-post</module>
                <module>demo-49-01-active-spring-boot-24-post</module>
            </modules>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-dependencies</artifactId>
                        <version>2.4.6</version>
                        <scope>import</scope>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>

    <build>
        <!--        <resources>-->
        <!--            <resource>-->
        <!--                <directory>${project.basedir}/src/main/resources</directory>-->
        <!--                <filtering>true</filtering>-->
        <!--                <includes>-->
        <!--                    &lt;!&ndash; 仅添加指定环境的配置文件 &ndash;&gt;-->
        <!--                    <include>application-${spring_profiles_active}.properties</include>-->
        <!--                    &lt;!&ndash;妈的，我正常配置代码都编译不进去了。不应该放在父MAVEN 中的。&ndash;&gt;-->
        <!--                    <include>*</include>-->
        <!--                </includes>-->
        <!--            </resource>-->
        <!--            <resource>-->
        <!--                <directory>${project.basedir}/src/main/resources/mapper</directory>-->
        <!--                <includes>-->
        <!--                    <include>*.xml</include>-->
        <!--                </includes>-->
        <!--                &lt;!&ndash; 资源文件拷贝的目标位置，如果目录不存在则会创建这个目录 &ndash;&gt;-->
        <!--                <targetPath>${project.build.outputDirectory}/mapper</targetPath>-->
        <!--            </resource>-->
        <!--        </resources>-->
        <testResources>
            <testResource>
                <directory>src\main\resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src\test\resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <!-- maven 的打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!-- lombok 只在编译时有效 -->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--
                这个插件必须要生成一个jar 包对象，并且会去找一个MainClass 如果没找到就会报错
                所以这个插件不应该放在parent 中
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            -->
            <plugin>
                <!--
                    http://maven.apache.org/plugins/maven-resources-plugin/resources-mojo.html#delimiters
                    注意
                        如果遇到${project.version}无法生效，是因为
                        由于 **${}** 方式会被maven处理。
                        如果你pom继承了spring-boot-starter-parent，Spring Boot
                        已经将maven-resources-plugins默认的${}方式改为了@@方式，如@name@
                        如果还想继续使用${}占位符方式，只需要在pom文件中加上下面配置即可：
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <!-- 使用默认的字符读取maven pom.xml 中的变量值 -->
                    <!-- <useDefaultDelimiters>true</useDefaultDelimiters> -->
                    <delimiters>
                        <delimiter>${*}</delimiter>
                        <delimiter>@</delimiter>
                    </delimiters>
                </configuration>
            </plugin>
            <plugin>
                <!-- 版本控制打包插件 -->
                <!-- 更新项目当前版本 mvn versions:set -DnewVersion=1.0 -->
                <!-- 回滚项目版本，必须有备份文件才有效 mvn versions:revert -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <!-- 是否生成备份文件，如果不生成不能回滚 -->
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <!-- 跳过该模块的发布 -->
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
