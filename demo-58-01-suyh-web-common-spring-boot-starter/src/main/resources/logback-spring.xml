<?xml version="1.0" encoding="UTF-8"?>

<!-- 注意这个文件名，似乎只能是这个，否则springProperty 会有问题配置这个文件名系统会自动加载这个配置 -->
<configuration>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <!--     <property name="LOG_HOME" value="/home/logs" />-->

    <!-- 如果这个文件的文件名不是logback-spring.xml 的话这个属性应该是不被支持的 -->
    <!-- 从springboot 的application.yaml 配置文件中获取配置值 -->
    <!-- springProperty 标签，这里替代logback 的默认 property 标签 -->
    <!-- name属性：指定变量名，在当前配置文件中生效 -->
    <!-- source属性：在application.yaml 配置文件中定义的key。这里将会取这个key 对应的值来填充变量的值 -->
    <!-- defaultValue属性：如果在没有找到 source 指定的key 则使用该值 -->
    <springProperty scope="context" name="LOG_HOME" source="logback.file.dir" defaultValue="/home/logs-default" />
    <springProperty scope="context" name="LOG_FILE_NAME" source="logback.file.prefix" defaultValue="rootDefault" />

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <!--            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{50} -    %msg%n</pattern>-->
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger:%L - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.%2i.log</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <!--转存文件大小上限-->
            <maxFileSize>10MB</maxFileSize>
            <!--总日志大小-->
            <totalSizeCap>10GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger:%L - %msg%n</pattern>
        </encoder>
    </appender>

    <!--默认情况下，只输出到标准输出，不输出到文件-->
    <root level="DEBUG">
        <!-- 标准输出日志 -->
        <appender-ref ref="STDOUT"/>
    </root>

    <!-- 该 <springProfile> 标签允许我们更加灵活配置文件，可选地包含或排除配置部分。
        元素中的任何位置均支持轮廓部分。使用该name属性指定哪个配置文件接受配置。
        可以使用逗号分隔列表指定多个配置文件。
        也可以在前面添加"!" 来排除哪些某些环境
    -->
    <!-- 开发环境时激活 -->
    <springProfile name="dev">
        <!-- 开发环境日志级别为DEBUG -->
        <root level="DEBUG">
            <!-- 文件输出日志 -->
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>

    <!-- 开发，测试的时候激活-->
    <springProfile name="dev,test">
    </springProfile>

    <!-- 当 "生产" 环境时，该配置不激活-->
    <springProfile name="!prod">
    </springProfile>

    <!-- 测试环境日志级别为INFO -->
    <springProfile name="test">
        <root level="INFO">
            <appender-ref ref="FILE"/>
        </root>
    </springProfile>
</configuration>